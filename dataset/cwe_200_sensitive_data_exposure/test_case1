import re
import os
import time
import requests
from flask import Flask, request
from threading import Thread

app = Flask(__name__)

# Simulates vulnerable endpoint (e.g., using unsanitized file reads)
@app.get("/insecure")
def insecure_handler():
    file = request.args.get("file") or "example.txt"
    try:
        with open(file, "r") as f:
            return f.read()
    except Exception as e:
        return str(e), 404

# Basic regex whitelist for safe filenames
def is_safe_path(path):
    # Reject absolute paths or directory traversal
    if ".." in path or path.startswith(("/", "\\")):
        return False

    # Reject known sensitive filenames
    forbidden_files = {"config.py", ".env", "settings.py"}
    if path.lower() in forbidden_files:
        return False

    # Basic character whitelist
    return re.match(r"^[a-zA-Z0-9_.-]+$", path) is not None

# Simulates protected endpoint (e.g., file access with validation)
@app.get("/secure")
def secure_handler():
    file = request.args.get("file") or "example.txt"
    if not is_safe_path(file):
        return "Invalid file path", 400
    try:
        with open(file, "r") as f:
            return f.read()
    except Exception as e:
        return str(e), 404

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)